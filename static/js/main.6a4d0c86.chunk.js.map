{"version":3,"sources":["components/Counter/Controls.js","components/Counter/Value.js","redux/counter/counter-actions.js","redux/counter/counter-selector.js","components/Counter/Counter.js","components/Dropdown/Dropdown.js","components/ColorPicker/ColorPicker.js","components/TodoList/TodoList.js","components/Form/Form.js","App.js","redux/counter/counter-reducer.js","redux/store.js","index.js"],"names":["Controls","step","onIncrement","onDecrement","className","type","onClick","Value","value","increment","createAction","decrement","getValue","state","counter","counterValue","getStep","Counter","useSelector","dispatch","useDispatch","actions","Dropdown","visible","toggle","setState","prevState","this","Component","ColorPicker","activeOptionIdx","setActiveIdx","index","makeOptionClassName","optionClasses","push","join","options","props","label","map","color","style","backgroundColor","TodoList","todos","onDeleteTodo","id","text","Form","name","surname","experience","licence","nameId","uuidv4","surnameId","handleChange","e","currentTarget","handleSubmite","preventDefault","handleLicenceChange","checked","onSubmit","htmlFor","onChange","disabled","App","initialTodos","deleteTodo","todoId","filter","todo","totalTodoCount","length","completedTodoCount","reduce","total","completed","initialValue","colorPickerOptions","valueReducer","createReducer","payload","combineReducers","rootReducer","counterReducer","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a4d0c86.chunk.js","sourcesContent":["import React from 'react';\nimport './Controls.css';\n\nconst Controls = ({ step, onIncrement, onDecrement }) => (\n  <div className=\"Counter__controls\">\n    <button type=\"button\" onClick={onIncrement}>\n      Увеличить на {step}\n    </button>\n    <button type=\"button\" onClick={onDecrement}>\n      Уменьшить на {step}\n    </button>\n  </div>\n);\n\nexport default Controls;\n","import React from 'react';\nimport './Value.css';\n\nconst Value = ({ value }) => <span className=\"Counter__value\">{value}</span>;\n\nexport default Value;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst increment = createAction('counter/increment');\nconst decrement = createAction('counter/decrement');\n\nexport { increment, decrement };\n","const getValue = state => state.counter.counterValue;\nconst getStep = state => state.counter.step;\n\nexport { getValue, getStep };\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Controls from './Controls';\nimport Value from './Value';\nimport * as actions from '../../redux/counter/counter-actions';\nimport { getValue, getStep } from '../../redux/counter/counter-selector';\nimport './Counter.css';\n\nexport default function Counter() {\n  const value = useSelector(getValue);\n  const step = useSelector(getStep);\n  const dispatch = useDispatch();\n  // const onIncrement = () => dispatch(actions.increment(1));\n  // const onDecrement = () => dispatch(actions.decrement(1));\n\n  return (\n    <div className=\"Counter\">\n      <Value value={value} />\n      <Controls\n        step={step}\n        // onIncrement={onIncrement}\n        // onDecrement={onDecrement}\n        onIncrement={() => dispatch(actions.increment(1))}\n        onDecrement={() => dispatch(actions.decrement(1))}\n      />\n    </div>\n  );\n}\n\n// const mapStateToProps = state => {\n//   return {\n//     value: state.counter.counterValue,\n//     step: state.counter.step,\n//   };\n// };\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     onIncrement: () => dispatch(actions.increment(1)),\n//     onDecrement: () => dispatch(actions.decrement(1)),\n//   };\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Counter);\n\n// ===== Class ====== ====== ======\n\n// class Counter extends React.Component {\n//   static defaultProps = {\n//     initialValue: 0,\n//   };\n\n//   state = {\n//     value: this.props.initialValue,\n//   };\n\n//   handleIncrement = () => {\n//     this.setState(prevState => ({\n//       value: prevState.value + 1,\n//     }));\n//   };\n\n//   handleDecrement = () => {\n//     this.setState(prevState => ({\n//       value: prevState.value - 1,\n//     }));\n//   };\n\n//   render() {\n//     const { value } = this.state;\n//     const { handleIncrement, handleDecrement } = this;\n\n//     return (\n//       <div className=\"Counter\">\n//         <Value value={value} />\n//         <Controls onIncrement={handleIncrement} onDecrement={handleDecrement} />\n//       </div>\n//     );\n//   }\n// }\n\n// export default Counter;\n","import React, { Component } from 'react';\nimport './Dropdown.css';\n\nclass Dropdown extends Component {\n  state = {\n    visible: false,\n  };\n\n  toggle = () => {\n    this.setState(prevState => ({\n      visible: !prevState.visible,\n    }));\n  };\n\n  // show = () => {\n  //     this.setState({ visible: true,})\n  // }\n\n  // hide = () => {\n  //     this.setState({visible: false,})\n  // }\n\n  render() {\n    const { visible } = this.state;\n    const { toggle } = this;\n    return (\n      <div className=\"Dropdown\">\n        <button type=\"button\" className=\"Dropdown__toggle\" onClick={toggle}>\n          {visible ? 'Скрыть' : 'Показать'}\n        </button>\n        {/* <button\n                    type='button'\n                    className='Dropdown__toggle'\n                    onClick={this.show}>\n                    Показать\n                </button>\n                <button\n                    type='button'\n                    className='Dropdown__toggle'\n                    onClick={this.hide}>\n                    Скрыть\n                </button> */}\n\n        {visible && <div className=\"Dropdown__menu\">Выпадающее меню</div>}\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;\n","import React, { Component } from 'react';\nimport './ColorPicker.css';\n\nclass ColorPicker extends Component {\n  state = {\n    activeOptionIdx: 0,\n  };\n\n  setActiveIdx = index => {\n    this.setState({ activeOptionIdx: index });\n  };\n\n  makeOptionClassName = index => {\n    const { activeOptionIdx } = this.state;\n\n    const optionClasses = ['ColorPicker__option'];\n\n    if (index === activeOptionIdx) {\n      optionClasses.push('ColorPicker__option--active');\n    }\n\n    return optionClasses.join(' ');\n  };\n\n  render() {\n    const { activeOptionIdx } = this.state;\n    const { options } = this.props;\n    const { makeOptionClassName, setActiveIdx } = this;\n\n    const { label } = options[activeOptionIdx];\n\n    return (\n      <div className=\"ColorPicker\">\n        <h2 className=\"ColorPicker__title\">Color Picker</h2>\n        <p>Choosed color: {label}</p>\n        <div>\n          {options.map(({ label, color }, index) => (\n            <button\n              key={label}\n              className={makeOptionClassName(index)}\n              style={{ backgroundColor: color }}\n              onClick={() => setActiveIdx(index)}\n            ></button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ColorPicker;\n","import React from 'react';\nimport './TodoList.css';\n\nconst TodoList = ({ todos, onDeleteTodo }) => (\n  <ul className=\"TodoList\">\n    {todos.map(({ id, text }) => (\n      <li key={id} className=\"TodoList__item\">\n        <p className=\"TodoList__text\">{text}</p>\n        <button onClick={() => onDeleteTodo(id)}>Удалить</button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    surname: '',\n    experience: 'junior',\n    licence: false,\n  };\n\n  nameId = uuidv4();\n  surnameId = uuidv4();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  // handleNameChange = (e) => {\n  //     this.setState({\n  //         name: e.currentTarget.value\n  //     })\n  // };\n\n  // handleSurnameChange = (e) => {\n  //     this.setState({\n  //         surname: e.currentTarget.value\n  //     })\n  // };\n\n  handleSubmite = e => {\n    e.preventDefault();\n    this.setState({\n      name: '',\n      surname: '',\n    });\n  };\n\n  handleLicenceChange = e => {\n    // console.log(e.currentTarget.checked);\n    this.setState({ licence: e.currentTarget.checked });\n  };\n\n  render() {\n    const { name, surname, experience, licence } = this.state;\n    return (\n      <form onSubmit={this.handleSubmite}>\n        <label htmlFor={this.nameId}>\n          Name{' '}\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            id={this.nameId}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label htmlFor={this.surnameId}>\n          Surname\n          <input\n            type=\"text\"\n            name=\"surname\"\n            value={surname}\n            id={this.surnameId}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submite\">Send</button>\n\n        <h2>You experience</h2>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"experience\"\n            value=\"junior\"\n            onChange={this.handleChange}\n            checked={experience === 'junior'}\n          />\n          Junior\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"experience\"\n            value=\"middle\"\n            onChange={this.handleChange}\n            checked={experience === 'middle'}\n          />\n          Middle\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"experience\"\n            value=\"senior\"\n            onChange={this.handleChange}\n            checked={experience === 'senior'}\n          />\n          Senior\n        </label>\n\n        <br />\n\n        <label>\n          <input\n            type=\"checkbox\"\n            name=\"licence\"\n            checked={licence}\n            onChange={this.handleLicenceChange}\n          />\n          I agree with the condition\n        </label>\n\n        <button type=\"submit\" disabled={!this.state.licence}>\n          Send\n        </button>\n      </form>\n    );\n  }\n}\nexport default Form;\n","import './App.css';\nimport React, { Component } from 'react';\nimport Counter from './components/Counter';\nimport Dropdown from './components/Dropdown';\nimport ColorPicker from './components/ColorPicker';\nimport TodoList from './components/TodoList';\nimport Form from './components/Form/Form';\nimport colorPickerOptions from './colorPickerOptions.json';\nimport initialTodos from './todos.json';\n\nclass App extends Component {\n  state = {\n    todos: initialTodos,\n  };\n\n  deleteTodo = todoId => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  render() {\n    const { todos } = this.state;\n\n    const totalTodoCount = todos.length;\n    const completedTodoCount = todos.reduce(\n      (total, todo) => (todo.completed ? total + 1 : total),\n      0,\n    );\n\n    return (\n      <>\n        <div className=\"App\">\n          <Counter initialValue={0} />\n\n          <Dropdown />\n\n          <ColorPicker options={colorPickerOptions} />\n\n          <div>\n            <div className=\"TodoList\">\n              <p>Общее кол-во: {totalTodoCount}</p>\n              <p>Кол-во выполненных: {completedTodoCount}</p>\n            </div>\n            <TodoList todos={todos} onDeleteTodo={this.deleteTodo} />\n          </div>\n        </div>\n        <Form />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { increment, decrement } from './counter-actions';\n\nconst valueReducer = createReducer(0, {\n  [increment]: (state, { payload }) => state + payload,\n  [decrement]: (state, { payload }) => state - payload,\n});\n\nconst stepReducer = (state = 1) => state;\n\nexport default combineReducers({\n  counterValue: valueReducer,\n  step: stepReducer,\n});\n","import { combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport counterReducer from './counter/counter-reducer';\n\nconst rootReducer = combineReducers({\n  counter: counterReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}