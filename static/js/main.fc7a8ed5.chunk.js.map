{"version":3,"sources":["components/Counter/Controls.js","components/Counter/Value.js","components/Counter/Counter.js","components/Dropdown/Dropdown.js","components/ColorPicker/ColorPicker.js","components/Form/Form.js","App.js","index.js"],"names":["Controls","onIncrement","onDecrement","className","type","onClick","Value","value","Counter","state","props","initialValue","handleIncrement","setState","prevState","handleDecrement","this","React","Component","defaultProps","Form","name","surname","handleChange","e","currentTarget","handleSubmite","preventDefault","onSubmit","onChange","App","todos","initialTodos","deleteTodo","todoId","filter","todo","id","length","reduce","total","completed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"myBAceA,EAXE,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,YAAhB,OACf,sBAAKC,UAAU,oBAAf,UACE,wBAAQC,KAAK,SAASC,QAASJ,EAA/B,mFAGA,wBAAQG,KAAK,SAASC,QAASH,EAA/B,uFCHWI,G,MAFD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,sBAAMJ,UAAU,iBAAhB,SAAkCI,MCEzDC,G,kNAKJC,MAAQ,CACNF,MAAO,EAAKG,MAAMC,c,EAGpBC,gBAAkB,WAChB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BP,MAAOO,EAAUP,MAAQ,O,EAI7BQ,gBAAkB,WAChB,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1BP,MAAOO,EAAUP,MAAQ,O,4CAI7B,WACE,IAAQA,EAAUS,KAAKP,MAAfF,MACAK,EAAqCI,KAArCJ,gBAAiBG,EAAoBC,KAApBD,gBAEzB,OACE,sBAAKZ,UAAU,UAAf,UACE,cAAC,EAAD,CAAOI,MAAOA,IACd,cAAC,EAAD,CAAUN,YAAaW,EAAiBV,YAAaa,W,GA5BvCE,IAAMC,YAAtBV,EACGW,aAAe,CACpBR,aAAc,G,MCJKO,Y,MCAGA,Y,MFoCXV,I,OGrCTY,E,4MACJX,MAAQ,CACNY,KAAM,GACNC,QAAS,I,EAGXC,aAAe,SAAAC,GACb,MAAwBA,EAAEC,cAAlBJ,EAAR,EAAQA,KAAMd,EAAd,EAAcA,MACd,EAAKM,SAAL,eACGQ,EAAOd,K,EAgBZmB,cAAgB,SAAAF,GACdA,EAAEG,iBACF,EAAKd,SAAS,CACZQ,KAAM,GACNC,QAAS,M,4CAIb,WACE,MAA0BN,KAAKP,MAAvBY,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACd,OACE,uBAAMM,SAAUZ,KAAKU,cAArB,UACE,yCACO,IACL,uBACEtB,KAAK,OACLiB,KAAK,OACLd,MAAOc,EACPQ,SAAUb,KAAKO,kBAGnB,4CAEE,uBACEnB,KAAK,OACLiB,KAAK,UACLd,MAAOe,EACPO,SAAUb,KAAKO,kBAGnB,wBAAQnB,KAAK,UAAb,yB,GAvDWc,aA4DJE,I,eCpDTU,E,4MACJrB,MAAQ,CACNsB,MAAOC,G,EAGTC,WAAa,SAAAC,GACX,EAAKrB,UAAS,SAAAC,GAAS,MAAK,CAC1BiB,MAAOjB,EAAUiB,MAAMI,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAOH,U,4CAItD,WACE,IAAQH,EAAUf,KAAKP,MAAfsB,MAEeA,EAAMO,OACFP,EAAMQ,QAC/B,SAACC,EAAOJ,GAAR,OAAkBA,EAAKK,UAAYD,EAAQ,EAAIA,IAC/C,GAGF,OACE,mCACE,cAAC,EAAD,U,GAtBUtB,aA4CHY,ICjDfY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fc7a8ed5.chunk.js","sourcesContent":["import React from 'react';\nimport './Controls.css';\n\nconst Controls = ({ onIncrement, onDecrement }) => (\n  <div className=\"Counter__controls\">\n    <button type=\"button\" onClick={onIncrement}>\n      Увеличить на 1\n    </button>\n    <button type=\"button\" onClick={onDecrement}>\n      Уменьшить на 1\n    </button>\n  </div>\n);\n\nexport default Controls;\n","import React from 'react';\nimport './Value.css';\n\nconst Value = ({ value }) => <span className=\"Counter__value\">{value}</span>;\n\nexport default Value;\n","import React from 'react';\nimport Controls from './Controls';\nimport Value from './Value';\nimport './Counter.css';\n\nclass Counter extends React.Component {\n  static defaultProps = {\n    initialValue: 0,\n  };\n\n  state = {\n    value: this.props.initialValue,\n  };\n\n  handleIncrement = () => {\n    this.setState(prevState => ({\n      value: prevState.value + 1,\n    }));\n  };\n\n  handleDecrement = () => {\n    this.setState(prevState => ({\n      value: prevState.value - 1,\n    }));\n  };\n\n  render() {\n    const { value } = this.state;\n    const { handleIncrement, handleDecrement } = this;\n\n    return (\n      <div className=\"Counter\">\n        <Value value={value} />\n        <Controls onIncrement={handleIncrement} onDecrement={handleDecrement} />\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n","import React, { Component } from 'react';\nimport './Dropdown.css';\n\nclass Dropdown extends Component {\n  state = {\n    visible: false,\n  };\n\n  toggle = () => {\n    this.setState(prevState => ({\n      visible: !prevState.visible,\n    }));\n  };\n\n  // show = () => {\n  //     this.setState({ visible: true,})\n  // }\n\n  // hide = () => {\n  //     this.setState({visible: false,})\n  // }\n\n  render() {\n    const { visible } = this.state;\n    const { toggle } = this;\n    return (\n      <div className=\"Dropdown\">\n        <button type=\"button\" className=\"Dropdown__toggle\" onClick={toggle}>\n          {visible ? 'Скрыть' : 'Показать'}\n        </button>\n        {/* <button\n                    type='button'\n                    className='Dropdown__toggle'\n                    onClick={this.show}>\n                    Показать\n                </button>\n                <button\n                    type='button'\n                    className='Dropdown__toggle'\n                    onClick={this.hide}>\n                    Скрыть\n                </button> */}\n\n        {visible && <div className=\"Dropdown__menu\">Выпадающее меню</div>}\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;\n","import React, { Component } from 'react';\nimport './ColorPicker.css';\n\nclass ColorPicker extends Component {\n  state = {\n    activeOptionIdx: 0,\n  };\n\n  setActiveIdx = index => {\n    this.setState({ activeOptionIdx: index });\n  };\n\n  makeOptionClassName = index => {\n    const { activeOptionIdx } = this.state;\n\n    const optionClasses = ['ColorPicker__option'];\n\n    if (index === activeOptionIdx) {\n      optionClasses.push('ColorPicker__option--active');\n    }\n\n    return optionClasses.join(' ');\n  };\n\n  render() {\n    const { activeOptionIdx } = this.state;\n    const { options } = this.props;\n    const { makeOptionClassName, setActiveIdx } = this;\n\n    const { label } = options[activeOptionIdx];\n\n    return (\n      <div className=\"ColorPicker\">\n        <h2 className=\"ColorPicker__title\">Color Picker</h2>\n        <p>Choosed color: {label}</p>\n        <div>\n          {options.map(({ label, color }, index) => (\n            <button\n              key={label}\n              className={makeOptionClassName(index)}\n              style={{ backgroundColor: color }}\n              onClick={() => setActiveIdx(index)}\n            ></button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ColorPicker;\n","import React, { Component } from 'react';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    surname: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  // handleNameChange = (e) => {\n  //     this.setState({\n  //         name: e.currentTarget.value\n  //     })\n  // };\n\n  // handleSurnameChange = (e) => {\n  //     this.setState({\n  //         surname: e.currentTarget.value\n  //     })\n  // };\n\n  handleSubmite = e => {\n    e.preventDefault();\n    this.setState({\n      name: '',\n      surname: '',\n    });\n  };\n\n  render() {\n    const { name, surname } = this.state;\n    return (\n      <form onSubmit={this.handleSubmite}>\n        <lable>\n          Name{' '}\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </lable>\n        <lable>\n          Surname\n          <input\n            type=\"text\"\n            name=\"surname\"\n            value={surname}\n            onChange={this.handleChange}\n          />\n        </lable>\n        <button type=\"submite\">Send</button>\n      </form>\n    );\n  }\n}\nexport default Form;\n","import './App.css';\nimport React, { Component } from 'react';\nimport Counter from './components/Counter';\nimport Dropdown from './components/Dropdown';\nimport ColorPicker from './components/ColorPicker';\nimport TodoList from './components/TodoList';\nimport Form from './components/Form/Form';\nimport colorPickerOptions from './colorPickerOptions.json';\nimport initialTodos from './todos.json';\n\nclass App extends Component {\n  state = {\n    todos: initialTodos,\n  };\n\n  deleteTodo = todoId => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  render() {\n    const { todos } = this.state;\n\n    const totalTodoCount = todos.length;\n    const completedTodoCount = todos.reduce(\n      (total, todo) => (todo.completed ? total + 1 : total),\n      0,\n    );\n\n    return (\n      <>\n        <Form />\n\n        {/* <div className=\"App\">\n                          <Counter initialValue={0} />\n\n                          <Dropdown />\n\n                          <ColorPicker options={colorPickerOptions} />\n\n                          <div>\n                            <div className=\"TodoList\">\n                              <p>Общее кол-во: {totalTodoCount}</p>\n                              <p>Кол-во выполненных: {completedTodoCount}</p>\n                            </div>\n                            <TodoList todos={todos} onDeleteTodo={this.deleteTodo} />\n                          </div>\n                        </div> */}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}